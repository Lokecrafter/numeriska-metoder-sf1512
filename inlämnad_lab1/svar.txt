1--------------------------------------------------------------------------------

a.
x =
    2.1304
    2.6957
   -0.1739
   -0.6522

c.
Residualvektorn blir inte lika med noll eftersom datorn gör små avrundningar när den använder flyttal. Den blir dock väldigt väldigt liten och kan ses som noll.

2--------------------------------------------------------------------------------
a.
För minsta positiva roten kan man försumma talet 0.05 och man får då att roten bör vara ungefär noll.

Den största positiva roten kan grovapproximeras bland annat genom att e^(-stort tal) blir väldigt litet.
Men också genom att approximera bråket till att vara (x + 1) / 3. Sedan löser man bara ut x och får att största roten bör vara ungefär 7.

Den minsta rotens skattning var bäst eftersom vi inte förenklade så många termer.

d.
Definition av kvadratisk konvergens:

lim (n->inf): E(n+1) / (E(n)^2) = K

där K är en konstant.

e.
K = 0.49091

f.
x = 6.6104 +/- 1.9988e-13%

g.

Tvingat iterationer = 4:   x = 1.26e-11 +/- 0%
Ej tvingat iterationer:    x = 1.26e-11 +/- 2.2362e-12%


3--------------------------------------------------------------------------------
b.
Konvergens med gyllene snittet. Alltså:

p = (1 + sqrt(5)) / 2
lim (n->inf): E(n+1) / (E(n)^(p)) = K

där K är ett tal och p är gyllene snittet.

c.
K = 0.64997

d.
x1 = 0.0000
x2 = 6.6104

Det blev samma värde.

4--------------------------------------------------------------------------------
a.
Styckvis med splines. Det blev 4 * 12 = 48 koefficienter.

b.
De ansatser där man använde sig av endast ett andragradspolynom.

c.
Det var den interpolation med 12-gradigt polynom. Denna använder sig av hela årets data och går även genom alla data.
Splines gör detta med men polynomet går snabbare att räkna.

Soltiden blev 18h 33min.

d.
Splines blev bäst för julafton eftersom den använder sig av all data men den sticker inte iväg som ett höggradigt polynom gör i sina ändlägen.

Soltiden blev 6h 1min.

5--------------------------------------------------------------------------------
a.
Minsta roten ökade med 9.73%
Största roten minskade med 0.0019%

De påverkadesolika mycket och åt olika håll.

c.
x1 = 1.2601e-12     +/-  0
x2 = 6.610388677176 +/-  1.321e-12

6--------------------------------------------------------------------------------
b.
Vi sätter f(x) <= 1/(4x^3).
Error_tot = Error_trunk + Error_svanskapning.
Error_svanskapning <= 1e-9 - Error_trunk.
Ger: Error_svanskapning = 1e-10.

B blir: B >= sqrt(1/(8 * Error_svanskapning))
B = 35356 

c.
Vi approximerar området kring x=0 med en rät linje från x = -0.01 till x = 0.01 med hjälp an linjär interpolation.

d.
Ja. Vi delar upp integralen i delintervall eftersom funktionen ser så olika ut över det långa intervallet.

e.
Resultat: 0.037207


f.
Felgräns: +/- 4.1755e-10
Tagit hänsyn till Error_svanskapning och felet vid approximationen i början. Detta gjordes genom att beräkna gränsvärdet då x -> 0 för funktionen f.
Detta gränsvärdet jämfördes med approximationens värde och vi fick då ett fel på 1.1e-11.

Felgränsen blir således:
+/- 4.2855e-10

7--------------------------------------------------------------------------------
a.
Resultat quad:     0.055133 +/- 4e-10
Resultat integral: 0.055133 +/- 4e-10

Integralen delades upp i olika delintervall. Ett från 0-0.16485, ett från 0.16485-0.16585, ett från 0.16585-0.3307 och ett från 0.3307-6.

b.
Vi hittade ställena då funktionen var "ganska" liten eftersom funktionen hade en "bulle" i mitten. 
Vi beräknade när den var lika med 0.01 och satte intervallens gränser utifrån det.
Detta hade gått att göra grafiskt men vi använde sekantmetoden för att få ett lite mer exakt svar.